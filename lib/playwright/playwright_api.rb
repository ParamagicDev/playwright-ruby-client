module Playwright
  class PlaywrightApi
    # Wrap ChannelOwner.
    # Playwright::ChannelOwners::XXXXX will be wrapped as Playwright::XXXXX
    # Playwright::XXXXX is automatically generated by development/generate_api
    #
    # @param channel_owner [ChannelOwner]
    # @note Intended for internal use only.
    def self.from_channel_owner(channel_owner)
      channel_owner_class_name = channel_owner.class.name
      raise "#{channel_owner_class_name} is not a channel owner" unless channel_owner_class_name.include?('::ChannelOwners::')
      class_name = channel_owner_class_name.split('::ChannelOwners::').last
      klass = ::Playwright.const_get(class_name)
      if klass
        klass.new(channel_owner)
      else
        raise NotImplementedError.new("Playwright::#{class_name} is not implemented")
      end
    end

    private

    # @param channel_owner [Playwright::ChannelOwner]
    def initialize(channel_owner)
      @channel_owner = channel_owner
    end

    def wrap_channel_owner(object)
      if object.is_a?(ChannelOwner)
        PlaywrightApi.from_channel_owner(object)
      else
        object
      end
    end
  end
end
